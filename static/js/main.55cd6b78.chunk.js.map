{"version":3,"sources":["logo.svg","components/Villanelle.js","App.js","reportWebVitals.js","index.js"],"names":["Villanelle","props","makeFnHandleLineChange","i","event","lines","state","matches","findMatchingRefrains","j","target","value","setState","Array","fill","a","b","includes","stanzaIndex","numLinesInStanza","linesRender","rhymeScheme","lineIndex","push","className","class","type","this","onChange","stanzas","renderStanza","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,yCC+EAA,E,kDA3Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,uBAAyB,SAACC,GAExB,OAAO,SAACC,GACN,IAAIC,EAAK,eAAQ,EAAKC,MAAMD,OACxBE,EAAU,EAAKC,qBAAqBL,GACxC,IAAK,IAAIM,KAAKF,EACZF,EAAME,EAAQE,IAAML,EAAMM,OAAOC,MAEnC,EAAKC,SAAS,CAAEP,YA1BlB,EAAKC,MAAQ,CACXD,MAAOQ,MAAM,IAAIC,KAAK,KAHP,E,wDAOnB,SAAqBX,GAEnB,IAAIY,EAAI,CAAC,EAAG,EAAG,GAAI,IACfC,EAAI,CAAC,EAAG,EAAG,GAAI,IACnB,OAAID,EAAEE,SAASd,GACNY,EAELC,EAAEC,SAASd,GACNa,EAEF,CAACb,K,0BAeV,SAAae,EAAaC,GAExB,IADA,IAAIC,EAAc,GACTjB,EAAI,EAAGA,EAAIgB,EAAkBhB,IAAK,CAEzC,IAGIkB,EAHAC,EAA0B,EAAdJ,EAAkBf,EAKhCkB,EADElB,EAAG,IAAK,GAAKA,EAAG,IAAM,GAAW,KAANA,EACf,IAEA,IAGhBiB,EAAYG,KACV,sBAAKC,UAAU,OAAf,UACE,sBAAMC,MAAM,eAAZ,SAA4BJ,IAC5B,+BACE,uBACEK,KAAK,OACLf,MAAOgB,KAAKrB,MAAMD,MAAMiB,GACxBM,SAAUD,KAAKzB,uBAAuBoB,WAMhD,OAAO,qBAAKE,UAAU,SAAf,SAAyBJ,M,oBAGlC,WAEE,IADA,IAAIS,EAAU,GACL1B,EAAI,EAAGA,EAAI,EAAGA,IACX,IAANA,EACF0B,EAAQN,KAAKI,KAAKG,aAAa3B,EAAG,IAElC0B,EAAQN,KAAKI,KAAKG,aAAa3B,EAAG,IAGtC,OAAQ,qBAAKqB,UAAU,aAAf,SAA6BK,Q,GAxEhBE,a,MCUVC,MATf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,+BACA,cAAC,EAAD,QCISS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.55cd6b78.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\n\n// A Villanelle is a poem consisting of 6 stanzas, 5 tercets and 1 quatrain.\nclass Villanelle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: Array(18).fill(''),\n    };\n  }\n\n  findMatchingRefrains(i) {\n    // Given i, the index of the line in the poem, find a list of matching refreins indexes.\n    var a = [0, 5, 11, 17];\n    var b = [2, 8, 14, 18];\n    if (a.includes(i)) {\n      return a;\n    }\n    if (b.includes(i)) {\n      return b;\n    }\n    return [i];\n  }\n\n  makeFnHandleLineChange = (i) => {\n    // Given i, the index of the line in the poem, return a function that handles changes to the line.\n    return (event) => {\n      var lines = { ...this.state.lines }\n      var matches = this.findMatchingRefrains(i)\n      for (var j in matches) {\n        lines[matches[j]] = event.target.value;\n      }\n      this.setState({ lines });\n    }\n  }\n\n  renderStanza(stanzaIndex, numLinesInStanza) {\n    var linesRender = []\n    for (var i = 0; i < numLinesInStanza; i++) {\n      // It's always 3, tercet, because only the last stanza is a quatrain.\n      var lineIndex = stanzaIndex * 3 + i;\n\n      // The rhyme scheme is ABA*5 + ABAA\n      var rhymeScheme;\n      if (i %3 ===0 || i %3 === 2 || i === 18) {\n        rhymeScheme = 'A';\n      } else {\n        rhymeScheme = 'B';\n      }\n\n      linesRender.push(\n        <div className=\"line\">\n          <span class=\"rhyme-scheme\">{rhymeScheme}</span>\n          <span>\n            <input\n              type=\"text\"\n              value={this.state.lines[lineIndex]}\n              onChange={this.makeFnHandleLineChange(lineIndex)}>\n            </input>\n          </span>\n        </div>\n      );\n    }\n    return <div className=\"stanza\">{linesRender}</div>;\n  }\n\n  render() {\n    var stanzas = [];\n    for (var i = 0; i < 6; i++) {\n      if (i === 5) {\n        stanzas.push(this.renderStanza(i, 4));\n      } else {\n        stanzas.push(this.renderStanza(i, 3));\n      }\n    }\n    return (<div className=\"villanelle\">{stanzas}</div>);\n  }\n}\n\nexport default Villanelle;","import logo from './logo.svg';\nimport Villanelle from './components/Villanelle';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Villanelle Writer</header>\n      <Villanelle />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}